{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1","program":"/Users/spluta1/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","primal_check","--edition=2018","/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=f0f1fb56cec0d58d","-C","extra-filename=-f0f1fb56cec0d58d","--out-dir","/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps","-L","dependency=/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps","--extern","num_integer=/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps/libnum_integer-a360eb8838f33862.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/spluta1/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps/libprimal_check-f0f1fb56cec0d58d.rmeta"},"prelude":{"crate_id":{"name":"primal_check","disambiguator":[15709841444248103327,16942345003955410193]},"crate_root":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src","external_crates":[{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11266178634318078844,10430434914575217037]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2427264904945132901,10184032034968735412]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9774951351864599068,14817832832842499961]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10809433593918525561,458952361993985826]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15028772050842969220,14160812736163645060]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6995225455969351707,4449664983666090491]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8140348155906305511,16205222570971502248]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[233178625001733801,10631967199943834554]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1525994598401419908,3288373240607898362]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[6171023582747105604,8380219937402072808]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16379221974889702373,16836676840445794723]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[17037182358159064978,13693302728723089691]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","num":16,"id":{"name":"num_integer","disambiguator":[17316086056191561063,15440118491029719635]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","num":17,"id":{"name":"num_traits","disambiguator":[2989495312243378153,7941914983733176037]}}],"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","byte_start":0,"byte_end":251,"line_start":1,"line_end":9,"column_start":1,"column_end":14}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","byte_start":138,"byte_end":150,"line_start":5,"line_end":5,"column_start":26,"column_end":38},"alias_span":null,"name":"miller_rabin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","byte_start":183,"byte_end":199,"line_start":6,"line_end":6,"column_start":32,"column_end":48},"alias_span":null,"name":"as_perfect_power","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":19},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","byte_start":201,"byte_end":215,"line_start":6,"line_end":6,"column_start":50,"column_end":64},"alias_span":null,"name":"as_prime_power","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","byte_start":0,"byte_end":251,"line_start":1,"line_end":9,"column_start":1,"column_end":14},"name":"","qualname":"::","value":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":20}],"decl_id":null,"docs":" Check some primality-related properties of numbers.","sig":null,"attributes":[{"value":"/ Check some primality-related properties of numbers.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","byte_start":0,"byte_end":55,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","byte_start":56,"byte_end":59,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is designed to be used via `primal`.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/lib.rs","byte_start":60,"byte_end":111,"line_start":3,"line_end":3,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":1086,"byte_end":1102,"line_start":31,"line_end":31,"column_start":8,"column_end":24},"name":"as_perfect_power","qualname":"::perfect_power::as_perfect_power","value":"pub fn as_perfect_power(u64) -> (u64, u8)","parent":null,"children":[],"decl_id":null,"docs":" Returns integers `(y, k)` such that `x = y^k` with `k` maximised\n (other than for `x = 0, 1`, in which case `y = x`, `k = 1`).","sig":null,"attributes":[{"value":"/ Returns integers `(y, k)` such that `x = y^k` with `k` maximised","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":532,"byte_end":600,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ (other than for `x = 0, 1`, in which case `y = x`, `k = 1`).","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":601,"byte_end":665,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":666,"byte_end":669,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":670,"byte_end":684,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":685,"byte_end":688,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":689,"byte_end":700,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # use primal_check as primal;","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":701,"byte_end":734,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(primal::as_perfect_power(2), (2, 1));","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":735,"byte_end":787,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(primal::as_perfect_power(4), (2, 2));","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":788,"byte_end":840,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(primal::as_perfect_power(8), (2, 3));","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":841,"byte_end":893,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(primal::as_perfect_power(1024), (2, 10));","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":894,"byte_end":950,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":951,"byte_end":954,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(primal::as_perfect_power(1000), (10, 3));","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":955,"byte_end":1011,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":1012,"byte_end":1015,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(primal::as_perfect_power(15), (15, 1));","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":1016,"byte_end":1070,"line_start":29,"line_end":29,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":1071,"byte_end":1078,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2913,"byte_end":2927,"line_start":83,"line_end":83,"column_start":8,"column_end":22},"name":"as_prime_power","qualname":"::perfect_power::as_prime_power","value":"pub fn as_prime_power(u64) -> Option<(u64, u8)>","parent":null,"children":[],"decl_id":null,"docs":" Return `Some((p, k))` if `x = p^k` for some prime `p` and `k >= 1`\n (that is, including when `x` is itself a prime).","sig":null,"attributes":[{"value":"/ Return `Some((p, k))` if `x = p^k` for some prime `p` and `k >= 1`","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2312,"byte_end":2382,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/ (that is, including when `x` is itself a prime).","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2383,"byte_end":2435,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2436,"byte_end":2439,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if `x` not a perfect power.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2440,"byte_end":2486,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2487,"byte_end":2490,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2491,"byte_end":2505,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2506,"byte_end":2509,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2510,"byte_end":2521,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/ # use primal_check as primal;","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2522,"byte_end":2555,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(primal::as_prime_power(2), Some((2, 1)));","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2556,"byte_end":2612,"line_start":74,"line_end":74,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(primal::as_prime_power(4), Some((2, 2)));","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2613,"byte_end":2669,"line_start":75,"line_end":75,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(primal::as_prime_power(8), Some((2, 3)));","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2670,"byte_end":2726,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(primal::as_prime_power(1024), Some((2, 10)));","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2727,"byte_end":2787,"line_start":77,"line_end":77,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2788,"byte_end":2791,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(primal::as_prime_power(1000), None);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2792,"byte_end":2843,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2844,"byte_end":2847,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(primal::as_prime_power(15), None);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2848,"byte_end":2897,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/perfect_power.rs","byte_start":2898,"byte_end":2905,"line_start":82,"line_end":82,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":7172,"byte_end":7184,"line_start":101,"line_end":101,"column_start":8,"column_end":20},"name":"miller_rabin","qualname":"::is_prime::miller_rabin","value":"pub fn miller_rabin(u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if `n` is prime, using the deterministic version of the\n Miller-Rabin test.","sig":null,"attributes":[{"value":"/ Test if `n` is prime, using the deterministic version of the","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6485,"byte_end":6549,"line_start":81,"line_end":81,"column_start":1,"column_end":65}},{"value":"/ Miller-Rabin test.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6550,"byte_end":6572,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6573,"byte_end":6576,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Doing a lot of primality tests with numbers strictly below some","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6577,"byte_end":6644,"line_start":84,"line_end":84,"column_start":1,"column_end":68}},{"value":"/ upper bound will be faster using the `is_prime` method of a","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6645,"byte_end":6708,"line_start":85,"line_end":85,"column_start":1,"column_end":64}},{"value":"/ `Sieve` instance.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6709,"byte_end":6730,"line_start":86,"line_end":86,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6731,"byte_end":6734,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6735,"byte_end":6749,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6750,"byte_end":6753,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6754,"byte_end":6765,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ assert_eq!(primal::is_prime(1), false);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6766,"byte_end":6809,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(primal::is_prime(2), true);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6810,"byte_end":6852,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(primal::is_prime(3), true);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6853,"byte_end":6895,"line_start":93,"line_end":93,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(primal::is_prime(4), false);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6896,"byte_end":6939,"line_start":94,"line_end":94,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(primal::is_prime(5), true);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6940,"byte_end":6982,"line_start":95,"line_end":95,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6983,"byte_end":6986,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(primal::is_prime(22_801_763_487), false);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":6987,"byte_end":7043,"line_start":97,"line_end":97,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(primal::is_prime(22_801_763_489), true);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":7044,"byte_end":7099,"line_start":98,"line_end":98,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(primal::is_prime(22_801_763_491), false);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":7100,"byte_end":7156,"line_start":99,"line_end":99,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-check-0.3.1/src/is_prime.rs","byte_start":7157,"byte_end":7164,"line_start":100,"line_end":100,"column_start":1,"column_end":8}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}