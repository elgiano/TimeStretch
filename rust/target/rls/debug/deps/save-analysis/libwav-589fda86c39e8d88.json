{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0","program":"/Users/spluta1/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","wav","--edition=2018","/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=589fda86c39e8d88","-C","extra-filename=-589fda86c39e8d88","--out-dir","/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps","-L","dependency=/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps","--extern","riff=/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps/libriff-4db7ba45c06e9bc0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/spluta1/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps/libwav-589fda86c39e8d88.rmeta"},"prelude":{"crate_id":{"name":"wav","disambiguator":[6797821906036825824,17918631160279599834]},"crate_root":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src","external_crates":[{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11266178634318078844,10430434914575217037]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2427264904945132901,10184032034968735412]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9774951351864599068,14817832832842499961]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10809433593918525561,458952361993985826]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15028772050842969220,14160812736163645060]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6995225455969351707,4449664983666090491]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8140348155906305511,16205222570971502248]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[233178625001733801,10631967199943834554]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1525994598401419908,3288373240607898362]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[6171023582747105604,8380219937402072808]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16379221974889702373,16836676840445794723]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[17037182358159064978,13693302728723089691]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","num":16,"id":{"name":"riff","disambiguator":[8318115331546405403,11421819855624979102]}}],"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":0,"byte_end":7973,"line_start":1,"line_end":248,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":964,"byte_end":970,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":972,"byte_end":993,"line_start":33,"line_end":33,"column_start":26,"column_end":47},"alias_span":null,"name":"WAV_FORMAT_IEEE_FLOAT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":995,"byte_end":1009,"line_start":33,"line_end":33,"column_start":49,"column_end":63},"alias_span":null,"name":"WAV_FORMAT_PCM","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1051,"byte_end":1059,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"alias_span":null,"name":"BitDepth","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":0,"byte_end":7973,"line_start":1,"line_end":248,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":158}],"decl_id":null,"docs":" This is a crate for reading in and writing out wave files. It supports uncompressed PCM bit\n depths of 8, 16, 24 bits, and 32bit IEEE Float formats, both with any number of channels.\n Unfortunately other types of data format (e.g. compressed WAVE files) are not supported. There\n is also no support for any metadata chunks or any chunks other than the `\"fmt \"` and `\"data\"`\n chunks.","sig":null,"attributes":[{"value":"/ This is a crate for reading in and writing out wave files. It supports uncompressed PCM bit","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":0,"byte_end":95,"line_start":1,"line_end":1,"column_start":1,"column_end":96}},{"value":"/ depths of 8, 16, 24 bits, and 32bit IEEE Float formats, both with any number of channels.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":96,"byte_end":189,"line_start":2,"line_end":2,"column_start":1,"column_end":94}},{"value":"/ Unfortunately other types of data format (e.g. compressed WAVE files) are not supported. There","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":190,"byte_end":288,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ is also no support for any metadata chunks or any chunks other than the `\"fmt \"` and `\"data\"`","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":289,"byte_end":386,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ chunks.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":387,"byte_end":398,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":399,"byte_end":402,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":403,"byte_end":417,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":418,"byte_end":421,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":422,"byte_end":433,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":434,"byte_end":474,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":475,"byte_end":497,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":498,"byte_end":522,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":523,"byte_end":526,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let mut inp_file = File::open(Path::new(\"data/sine.wav\"))?;","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":527,"byte_end":590,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ let (header, data) = wav::read(&mut inp_file)?;","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":591,"byte_end":642,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":643,"byte_end":646,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut out_file = File::create(Path::new(\"data/output.wav\"))?;","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":647,"byte_end":714,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ wav::write(header, &data, &mut out_file)?;","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":715,"byte_end":761,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":762,"byte_end":774,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":775,"byte_end":782,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":783,"byte_end":790,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":792,"byte_end":814,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":815,"byte_end":836,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"warn(clippy :: pedantic)","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":837,"byte_end":863,"line_start":25,"line_end":25,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"header","qualname":"::header","value":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":160},{"krate":0,"index":182},{"krate":0,"index":180},{"krate":0,"index":179},{"krate":0,"index":177},{"krate":0,"index":174},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":30},{"krate":0,"index":34}],"decl_id":null,"docs":" Contains items responsible for dealing with the `\"fmt \"` chunk of wave files.\n","sig":null,"attributes":[{"value":"/ Contains items responsible for dealing with the `\"fmt \"` chunk of wave files.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":7975,"byte_end":8056,"line_start":1,"line_end":1,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":21},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8127,"byte_end":8141,"line_start":6,"line_end":6,"column_start":11,"column_end":25},"name":"WAV_FORMAT_PCM","qualname":"::header::WAV_FORMAT_PCM","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Value signifying PCM data.\n","sig":null,"attributes":[{"value":"/ Value signifying PCM data.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8086,"byte_end":8116,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":22},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8203,"byte_end":8224,"line_start":8,"line_end":8,"column_start":11,"column_end":32},"name":"WAV_FORMAT_IEEE_FLOAT","qualname":"::header::WAV_FORMAT_IEEE_FLOAT","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Value signifying IEEE float data.\n","sig":null,"attributes":[{"value":"/ Value signifying IEEE float data.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8155,"byte_end":8192,"line_start":7,"line_end":7,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":160},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8574,"byte_end":8580,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"Header","qualname":"::header::Header","value":"Header { audio_format, channel_count, sampling_rate, bytes_per_second, bytes_per_sample, bits_per_sample }","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"decl_id":null,"docs":" Structure for the `\"fmt \"` chunk of wave files, specifying key information about the enclosed\n data.","sig":null,"attributes":[{"value":"/ Structure for the `\"fmt \"` chunk of wave files, specifying key information about the enclosed","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8239,"byte_end":8336,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ data.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8337,"byte_end":8346,"line_start":11,"line_end":11,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8347,"byte_end":8350,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct supports only PCM and IEEE float data, which is to say there is no extra members for","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8351,"byte_end":8451,"line_start":13,"line_end":13,"column_start":1,"column_end":101}},{"value":"/ compressed format data.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8452,"byte_end":8479,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8540,"byte_end":8562,"line_start":16,"line_end":16,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":161},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8591,"byte_end":8603,"line_start":18,"line_end":18,"column_start":9,"column_end":21},"name":"audio_format","qualname":"::header::Header::audio_format","value":"u16","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":162},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8618,"byte_end":8631,"line_start":19,"line_end":19,"column_start":9,"column_end":22},"name":"channel_count","qualname":"::header::Header::channel_count","value":"u16","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":163},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8646,"byte_end":8659,"line_start":20,"line_end":20,"column_start":9,"column_end":22},"name":"sampling_rate","qualname":"::header::Header::sampling_rate","value":"u32","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":164},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8674,"byte_end":8690,"line_start":21,"line_end":21,"column_start":9,"column_end":25},"name":"bytes_per_second","qualname":"::header::Header::bytes_per_second","value":"u32","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":165},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8705,"byte_end":8721,"line_start":22,"line_end":22,"column_start":9,"column_end":25},"name":"bytes_per_sample","qualname":"::header::Header::bytes_per_sample","value":"u16","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":166},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8736,"byte_end":8751,"line_start":23,"line_end":23,"column_start":9,"column_end":24},"name":"bits_per_sample","qualname":"::header::Header::bits_per_sample","value":"u16","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9788,"byte_end":9791,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Header>::new","value":"pub fn new(u16, u16, u32, u16) -> Header","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Header object.","sig":null,"attributes":[{"value":"/ Creates a new Header object.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8779,"byte_end":8811,"line_start":27,"line_end":27,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8816,"byte_end":8819,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8824,"byte_end":8835,"line_start":29,"line_end":29,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8840,"byte_end":8843,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ While the [`crate::read`] and [`crate::write`] functions only support uncompressed PCM/IEEE","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8848,"byte_end":8943,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ for the audio format, the option is given here to select any audio format for custom","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8948,"byte_end":9036,"line_start":32,"line_end":32,"column_start":5,"column_end":93}},{"value":"/ implementations of wave features.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9041,"byte_end":9078,"line_start":33,"line_end":33,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9083,"byte_end":9086,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ## Parameters","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9091,"byte_end":9108,"line_start":35,"line_end":35,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9113,"byte_end":9116,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ * `audio_format` - Audio format. Only [`WAV_FORMAT_PCM`] (0x01) and","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9121,"byte_end":9192,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/                    [`WAV_FORMAT_IEEE_FLOAT`] (0x03) are supported.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9197,"byte_end":9267,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ * `channel_count` - Channel count. The number of channels each sample has. Generally 1","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9272,"byte_end":9362,"line_start":39,"line_end":39,"column_start":5,"column_end":95}},{"value":"/                     (mono) or 2 (stereo).","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9367,"byte_end":9412,"line_start":40,"line_end":40,"column_start":5,"column_end":50}},{"value":"/ * `sampling_rate` - Sampling rate (e.g. 44.1kHz, 48kHz, 96kHz, etc.).","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9417,"byte_end":9490,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ * `bits_per_sample` - Number of bits in each (sub-channel) sample. Generally 8, 16, 24, or","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9495,"byte_end":9589,"line_start":42,"line_end":42,"column_start":5,"column_end":99}},{"value":"/                       32.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9594,"byte_end":9623,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9628,"byte_end":9631,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9636,"byte_end":9650,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9655,"byte_end":9658,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9663,"byte_end":9670,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ let h = wav::Header::new(wav::header::WAV_FORMAT_PCM, 2, 48_000, 16);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9675,"byte_end":9748,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9753,"byte_end":9760,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":9765,"byte_end":9776,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":49},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bit_depth","qualname":"::bit_depth","value":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":184},{"krate":0,"index":205},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":199},{"krate":0,"index":53},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86}],"decl_id":null,"docs":" Contains items for dealing with the `\"data\"` chunk of wave files.\n","sig":null,"attributes":[{"value":"/ Contains items for dealing with the `\"data\"` chunk of wave files.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12201,"byte_end":12270,"line_start":1,"line_end":1,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":185},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12457,"byte_end":12462,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"Eight","qualname":"::bit_depth::BitDepth::Eight","value":"BitDepth::Eight(Vec<u8>)","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":188},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12477,"byte_end":12484,"line_start":10,"line_end":10,"column_start":5,"column_end":12},"name":"Sixteen","qualname":"::bit_depth::BitDepth::Sixteen","value":"BitDepth::Sixteen(Vec<i16>)","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":191},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12500,"byte_end":12510,"line_start":11,"line_end":11,"column_start":5,"column_end":15},"name":"TwentyFour","qualname":"::bit_depth::BitDepth::TwentyFour","value":"BitDepth::TwentyFour(Vec<i32>)","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":194},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12526,"byte_end":12540,"line_start":12,"line_end":12,"column_start":5,"column_end":19},"name":"ThirtyTwoFloat","qualname":"::bit_depth::BitDepth::ThirtyTwoFloat","value":"BitDepth::ThirtyTwoFloat(Vec<f32>)","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":197},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12556,"byte_end":12561,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Empty","qualname":"::bit_depth::BitDepth::Empty","value":"BitDepth::Empty","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":184},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12442,"byte_end":12450,"line_start":8,"line_end":8,"column_start":10,"column_end":18},"name":"BitDepth","qualname":"::bit_depth::BitDepth","value":"pub enum BitDepth {\n    Eight(Vec<u8>),\n    Sixteen(Vec<i16>),\n    TwentyFour(Vec<i32>),\n    ThirtyTwoFloat(Vec<f32>),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197}],"decl_id":null,"docs":" The supported bit-depths and containers for the samples at each depth.\n","sig":null,"attributes":[{"value":"/ The supported bit-depths and containers for the samples at each depth.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12300,"byte_end":12374,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12410,"byte_end":12432,"line_start":7,"line_end":7,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12669,"byte_end":12677,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"is_eight","qualname":"<BitDepth>::is_eight","value":"pub fn is_eight(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bit depth is [`Self::Eight`].\n","sig":null,"attributes":[{"value":"/ Returns `true` if the bit depth is [`Self::Eight`].","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12586,"byte_end":12641,"line_start":17,"line_end":17,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12646,"byte_end":12657,"line_start":18,"line_end":18,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12839,"byte_end":12847,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"as_eight","qualname":"<BitDepth>::as_eight","value":"pub fn as_eight(&Self) -> Option<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value of the enum if it is [`Self::Eight`].\n","sig":null,"attributes":[{"value":"/ Returns the inner value of the enum if it is [`Self::Eight`].","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12746,"byte_end":12811,"line_start":23,"line_end":23,"column_start":5,"column_end":70}},{"value":"must_use","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12816,"byte_end":12827,"line_start":24,"line_end":24,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13139,"byte_end":13153,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"try_into_eight","qualname":"<BitDepth>::try_into_eight","value":"pub fn try_into_eight(Self) -> Result<Vec<u8>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert into the inner value.","sig":null,"attributes":[{"value":"/ Attempts to convert into the inner value.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12991,"byte_end":13036,"line_start":33,"line_end":33,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13041,"byte_end":13044,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13049,"byte_end":13062,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13067,"byte_end":13070,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Fails if enum isn't the [`Self::Eight`] variant.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13075,"byte_end":13127,"line_start":37,"line_end":37,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13389,"byte_end":13399,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"is_sixteen","qualname":"<BitDepth>::is_sixteen","value":"pub fn is_sixteen(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bit depth is [`Self::Sixteen`].\n","sig":null,"attributes":[{"value":"/ Returns `true` if the bit depth is [`Self::Sixteen`].","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13304,"byte_end":13361,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"must_use","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13366,"byte_end":13377,"line_start":47,"line_end":47,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13565,"byte_end":13575,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"as_sixteen","qualname":"<BitDepth>::as_sixteen","value":"pub fn as_sixteen(&Self) -> Option<&Vec<i16>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value of the enum if it is [`Self::Sixteen`].\n","sig":null,"attributes":[{"value":"/ Returns the inner value of the enum if it is [`Self::Sixteen`].","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13470,"byte_end":13537,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"must_use","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13542,"byte_end":13553,"line_start":53,"line_end":53,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13872,"byte_end":13888,"line_start":67,"line_end":67,"column_start":12,"column_end":28},"name":"try_into_sixteen","qualname":"<BitDepth>::try_into_sixteen","value":"pub fn try_into_sixteen(Self) -> Result<Vec<i16>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert into the inner value.","sig":null,"attributes":[{"value":"/ Attempts to convert into the inner value.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13722,"byte_end":13767,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13772,"byte_end":13775,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13780,"byte_end":13793,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13798,"byte_end":13801,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Fails if enum isn't the [`Self::Sixteen`] variant.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":13806,"byte_end":13860,"line_start":66,"line_end":66,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14130,"byte_end":14144,"line_start":77,"line_end":77,"column_start":12,"column_end":26},"name":"is_twenty_four","qualname":"<BitDepth>::is_twenty_four","value":"pub fn is_twenty_four(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bit depth is [`Self::TwentyFour`].\n","sig":null,"attributes":[{"value":"/ Returns `true` if the bit depth is [`Self::TwentyFour`].","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14042,"byte_end":14102,"line_start":75,"line_end":75,"column_start":5,"column_end":65}},{"value":"must_use","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14107,"byte_end":14118,"line_start":76,"line_end":76,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14316,"byte_end":14330,"line_start":83,"line_end":83,"column_start":12,"column_end":26},"name":"as_twenty_four","qualname":"<BitDepth>::as_twenty_four","value":"pub fn as_twenty_four(&Self) -> Option<&Vec<i32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value of the enum if it is [`Self::TwentyFour`].\n","sig":null,"attributes":[{"value":"/ Returns the inner value of the enum if it is [`Self::TwentyFour`].","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14218,"byte_end":14288,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"must_use","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14293,"byte_end":14304,"line_start":82,"line_end":82,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14633,"byte_end":14653,"line_start":96,"line_end":96,"column_start":12,"column_end":32},"name":"try_into_twenty_four","qualname":"<BitDepth>::try_into_twenty_four","value":"pub fn try_into_twenty_four(Self) -> Result<Vec<i32>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert into the inner value.","sig":null,"attributes":[{"value":"/ Attempts to convert into the inner value.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14480,"byte_end":14525,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14530,"byte_end":14533,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14538,"byte_end":14551,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14556,"byte_end":14559,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Fails if enum isn't the [`Self::TwentyFour`] variant.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14564,"byte_end":14621,"line_start":95,"line_end":95,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14902,"byte_end":14921,"line_start":106,"line_end":106,"column_start":12,"column_end":31},"name":"is_thirty_two_float","qualname":"<BitDepth>::is_thirty_two_float","value":"pub fn is_thirty_two_float(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bit depth is [`Self::ThirtyTwoFloat`].\n","sig":null,"attributes":[{"value":"/ Returns `true` if the bit depth is [`Self::ThirtyTwoFloat`].","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14810,"byte_end":14874,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"must_use","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14879,"byte_end":14890,"line_start":105,"line_end":105,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15101,"byte_end":15120,"line_start":112,"line_end":112,"column_start":12,"column_end":31},"name":"as_thirty_two_float","qualname":"<BitDepth>::as_thirty_two_float","value":"pub fn as_thirty_two_float(&Self) -> Option<&Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value of the enum if it is [`Self::ThirtyTwoFloat`].\n","sig":null,"attributes":[{"value":"/ Returns the inner value of the enum if it is [`Self::ThirtyTwoFloat`].","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":14999,"byte_end":15073,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"must_use","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15078,"byte_end":15089,"line_start":111,"line_end":111,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15431,"byte_end":15456,"line_start":125,"line_end":125,"column_start":12,"column_end":37},"name":"try_into_thirty_two_float","qualname":"<BitDepth>::try_into_thirty_two_float","value":"pub fn try_into_thirty_two_float(Self) -> Result<Vec<f32>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert into the inner value.","sig":null,"attributes":[{"value":"/ Attempts to convert into the inner value.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15274,"byte_end":15319,"line_start":120,"line_end":120,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15324,"byte_end":15327,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15332,"byte_end":15345,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15350,"byte_end":15353,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Fails if enum isn't the [`Self::ThirtyTwoFloat`] variant.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15358,"byte_end":15419,"line_start":124,"line_end":124,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15700,"byte_end":15708,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BitDepth>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bit depth is [`Self::Empty`].\n","sig":null,"attributes":[{"value":"/ Returns `true` if the bit depth is [`Self::Empty`].","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15617,"byte_end":15672,"line_start":133,"line_end":133,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15677,"byte_end":15688,"line_start":134,"line_end":134,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1657,"byte_end":1661,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"read","qualname":"::read","value":"pub fn read<R>(&mut R) -> io::Result<(Header, BitDepth)> where R: Read +\nio::Seek","parent":null,"children":[],"decl_id":null,"docs":" Reads in the given `reader` and attempts to extract the audio data and header from it.","sig":null,"attributes":[{"value":"/ Reads in the given `reader` and attempts to extract the audio data and header from it.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1144,"byte_end":1234,"line_start":41,"line_end":41,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1235,"byte_end":1238,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1239,"byte_end":1252,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1253,"byte_end":1256,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This function fails under the following circumstances:","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1257,"byte_end":1315,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1316,"byte_end":1319,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ * Any error occurring from the `reader` parameter during reading.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1320,"byte_end":1389,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/ * The data isn't RIFF data.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1390,"byte_end":1421,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"/ * The wave header specifies a compressed data format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1422,"byte_end":1479,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"/ * The wave header specifies an unsupported bit-depth.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1480,"byte_end":1537,"line_start":50,"line_end":50,"column_start":1,"column_end":58}},{"value":"/ * The wave data is malformed, or otherwise couldn't be parsed into samples.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1538,"byte_end":1617,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"allow(clippy :: similar_names)","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1618,"byte_end":1649,"line_start":52,"line_end":52,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":2307,"byte_end":2312,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"write","qualname":"::write","value":"pub fn write<W>(Header, &BitDepth, &mut W) -> std::io::Result<()> where\nW: Write + io::Seek","parent":null,"children":[],"decl_id":null,"docs":" Writes the given wav data to the given `writer`.","sig":null,"attributes":[{"value":"/ Writes the given wav data to the given `writer`.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1835,"byte_end":1887,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1888,"byte_end":1891,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ## Notes","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1892,"byte_end":1904,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1905,"byte_end":1908,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Although `track` is a borrowed value, its contents will be formatted into an owned `Vec<u8>` so","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1909,"byte_end":2008,"line_start":65,"line_end":65,"column_start":1,"column_end":100}},{"value":"/ that it can be written to the `writer` through [`riff::ChunkContents::write`].","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":2009,"byte_end":2091,"line_start":66,"line_end":66,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":2092,"byte_end":2095,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":2096,"byte_end":2109,"line_start":68,"line_end":68,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":2110,"byte_end":2113,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This function fails under the following circumstances:","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":2114,"byte_end":2172,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":2173,"byte_end":2176,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * Any error occurring from the `writer` parameter during writing.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":2177,"byte_end":2246,"line_start":72,"line_end":72,"column_start":1,"column_end":70}},{"value":"/ * The given [`BitDepth`] is [`BitDepth::Empty`].","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":2247,"byte_end":2299,"line_start":73,"line_end":73,"column_start":1,"column_end":53}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8766,"byte_end":8772,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":11056,"byte_end":11062,"line_start":100,"line_end":100,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":11739,"byte_end":11745,"line_start":120,"line_end":120,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12571,"byte_end":12579,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15788,"byte_end":15796,"line_start":140,"line_end":140,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15882,"byte_end":15890,"line_start":146,"line_end":146,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15987,"byte_end":15995,"line_start":152,"line_end":152,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":16095,"byte_end":16103,"line_start":158,"line_end":158,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":16206,"byte_end":16214,"line_start":164,"line_end":164,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":16324,"byte_end":16327,"line_start":170,"line_end":170,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":16686,"byte_end":16689,"line_start":185,"line_end":185,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":17054,"byte_end":17057,"line_start":200,"line_end":200,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":17428,"byte_end":17431,"line_start":215,"line_end":215,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":17871,"byte_end":17879,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":18044,"byte_end":18052,"line_start":15,"line_end":15,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":18570,"byte_end":18581,"line_start":44,"line_end":44,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":18790,"byte_end":18801,"line_start":54,"line_end":54,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":19528,"byte_end":19542,"line_start":90,"line_end":90,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":19801,"byte_end":19815,"line_start":101,"line_end":101,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":939,"byte_end":945,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/lib.rs","byte_start":1021,"byte_end":1030,"line_start":35,"line_end":35,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":49}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":8766,"byte_end":8772,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":11056,"byte_end":11062,"line_start":100,"line_end":100,"column_start":25,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/header.rs","byte_start":11739,"byte_end":11745,"line_start":120,"line_end":120,"column_start":25,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":12571,"byte_end":12579,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15788,"byte_end":15796,"line_start":140,"line_end":140,"column_start":18,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15882,"byte_end":15890,"line_start":146,"line_end":146,"column_start":24,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":15987,"byte_end":15995,"line_start":152,"line_end":152,"column_start":25,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":16095,"byte_end":16103,"line_start":158,"line_end":158,"column_start":25,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":16206,"byte_end":16214,"line_start":164,"line_end":164,"column_start":25,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":16324,"byte_end":16327,"line_start":170,"line_end":170,"column_start":28,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":6703},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":16686,"byte_end":16689,"line_start":185,"line_end":185,"column_start":28,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":6703},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":17054,"byte_end":17057,"line_start":200,"line_end":200,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":6703},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/bit_depth.rs","byte_start":17428,"byte_end":17431,"line_start":215,"line_end":215,"column_start":28,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":6703},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":17871,"byte_end":17879,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":18044,"byte_end":18052,"line_start":15,"line_end":15,"column_start":22,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":93},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":18570,"byte_end":18581,"line_start":44,"line_end":44,"column_start":9,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":18790,"byte_end":18801,"line_start":54,"line_end":54,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":19528,"byte_end":19542,"line_start":90,"line_end":90,"column_start":9,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/wav-1.0.0/src/tuple_iterator.rs","byte_start":19801,"byte_end":19815,"line_start":101,"line_end":101,"column_start":22,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":7161}}]}