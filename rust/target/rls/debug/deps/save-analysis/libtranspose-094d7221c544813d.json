{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1","program":"/Users/spluta1/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","transpose","/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=094d7221c544813d","-C","extra-filename=-094d7221c544813d","--out-dir","/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps","-L","dependency=/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps","--extern","num_integer=/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps/libnum_integer-a360eb8838f33862.rmeta","--extern","strength_reduce=/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps/libstrength_reduce-f5890e288dc1a29d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/spluta1/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps/libtranspose-094d7221c544813d.rmeta"},"prelude":{"crate_id":{"name":"transpose","disambiguator":[2082918241939600709,5705930986802704350]},"crate_root":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src","external_crates":[{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":4,"id":{"name":"num_integer","disambiguator":[17316086056191561063,15440118491029719635]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[11266178634318078844,10430434914575217037]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[2427264904945132901,10184032034968735412]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[9774951351864599068,14817832832842499961]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[10809433593918525561,458952361993985826]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[15028772050842969220,14160812736163645060]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[6995225455969351707,4449664983666090491]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8140348155906305511,16205222570971502248]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[233178625001733801,10631967199943834554]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1525994598401419908,3288373240607898362]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[6171023582747105604,8380219937402072808]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16379221974889702373,16836676840445794723]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[17037182358159064978,13693302728723089691]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":17,"id":{"name":"num_traits","disambiguator":[2989495312243378153,7941914983733176037]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","num":18,"id":{"name":"strength_reduce","disambiguator":[13438270270157312807,3404482292596758658]}}],"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":0,"byte_end":1959,"line_start":1,"line_end":44,"column_start":1,"column_end":33}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1908,"byte_end":1925,"line_start":43,"line_end":43,"column_start":19,"column_end":36},"alias_span":null,"name":"transpose_inplace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1949,"byte_end":1958,"line_start":44,"line_end":44,"column_start":23,"column_end":32},"alias_span":null,"name":"transpose","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":0,"byte_end":1959,"line_start":1,"line_end":44,"column_start":1,"column_end":33},"name":"","qualname":"::","value":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":17},{"krate":0,"index":35},{"krate":0,"index":38}],"decl_id":null,"docs":" Utility for transposing multi-dimensional data stored as a flat slice","sig":null,"attributes":[{"value":"/ Utility for transposing multi-dimensional data stored as a flat slice","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":0,"byte_end":73,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":74,"byte_end":77,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library treats Rust slices as flattened row-major 2D arrays, and provides functions to transpose these 2D arrays, so that the row data becomes the column data, and vice versa.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":78,"byte_end":262,"line_start":3,"line_end":3,"column_start":1,"column_end":185}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":263,"byte_end":270,"line_start":4,"line_end":4,"column_start":1,"column_end":8}},{"value":"/ // Create a 2D array in row-major order: the rows of our 2D array are contiguous,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":271,"byte_end":356,"line_start":5,"line_end":5,"column_start":1,"column_end":86}},{"value":"/ // and the columns are strided","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":357,"byte_end":391,"line_start":6,"line_end":6,"column_start":1,"column_end":35}},{"value":"/ let input_array = vec![ 1, 2, 3,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":392,"byte_end":428,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"/ \t\t\t\t\t\t4, 5, 6];","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":429,"byte_end":448,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/ ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":449,"byte_end":453,"line_start":9,"line_end":9,"column_start":1,"column_end":5}},{"value":"/ // Treat our 6-element array as a 2D 3x2 array, and transpose it to a 2x3 array","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":454,"byte_end":537,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"/ let mut output_array = vec![0; 6];","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":538,"byte_end":576,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ transpose::transpose(&input_array, &mut output_array, 3, 2);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":577,"byte_end":641,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":642,"byte_end":645,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ // The rows have become the columns, and the columns have become the rows","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":646,"byte_end":723,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ let expected_array =  vec![ 1, 4,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":724,"byte_end":761,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/\t\t\t\t\t\t\t\t2, 5,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":762,"byte_end":778,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/\t\t\t\t\t\t\t\t3, 6];","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":779,"byte_end":796,"line_start":17,"line_end":17,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(output_array, expected_array);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":797,"byte_end":842,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":843,"byte_end":846,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // If we transpose our data again, we should get our original data back.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":847,"byte_end":923,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ let mut final_array = vec![0; 6];","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":924,"byte_end":961,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/ transpose::transpose(&output_array, &mut final_array, 2, 3);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":962,"byte_end":1026,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(final_array, input_array);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1027,"byte_end":1068,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1069,"byte_end":1076,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1077,"byte_end":1080,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This library supports both in-place and out-of-place transposes. The out-of-place","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1081,"byte_end":1166,"line_start":26,"line_end":26,"column_start":1,"column_end":86}},{"value":"/ transpose is much, much faster than the in-place transpose -- the in-place transpose should","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1167,"byte_end":1262,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"/ only be used in situations where the system doesn't have enough memory to do an out-of-place transpose.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1263,"byte_end":1370,"line_start":28,"line_end":28,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1371,"byte_end":1374,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The out-of-place transpose uses one out of three different algorithms depending on the length of the input array.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1375,"byte_end":1492,"line_start":30,"line_end":30,"column_start":1,"column_end":118}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1493,"byte_end":1496,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ - Small: simple iteration over the array. ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1497,"byte_end":1543,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ - Medium: divide the array into tiles of fixed size, and process each tile separately. ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1544,"byte_end":1635,"line_start":33,"line_end":33,"column_start":1,"column_end":92}},{"value":"/ - Large: recursively split the array into smaller parts until each part is of a good size for the tiling algorithm, and then transpose each part.  ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1636,"byte_end":1787,"line_start":34,"line_end":34,"column_start":1,"column_end":152}},{"value":"no_std","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/lib.rs","byte_start":1789,"byte_end":1799,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":4252,"byte_end":4269,"line_start":69,"line_end":69,"column_start":8,"column_end":25},"name":"transpose_inplace","qualname":"::in_place::transpose_inplace","value":"pub fn transpose_inplace<T: Copy>(&mut [T], &mut [T], usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Transpose the input array in-place. ","sig":null,"attributes":[{"value":"/ Transpose the input array in-place. ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":2878,"byte_end":2918,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":2919,"byte_end":2922,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Given an input array of size input_width * input_height, representing flattened 2D data stored in row-major order,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":2923,"byte_end":3041,"line_start":38,"line_end":38,"column_start":1,"column_end":119}},{"value":"/ transpose the rows and columns of that input array, in-place.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3042,"byte_end":3107,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3108,"byte_end":3111,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Despite being in-place, this algorithm requires max(width * height) in scratch space.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3112,"byte_end":3201,"line_start":41,"line_end":41,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3202,"byte_end":3205,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3206,"byte_end":3213,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ // row-major order: the rows of our 2D array are contiguous,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3214,"byte_end":3278,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/ // and the columns are strided","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3279,"byte_end":3313,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/ let original_array = vec![ 1, 2, 3,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3314,"byte_end":3353,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/ \t\t\t\t\t\t   4, 5, 6];","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3354,"byte_end":3376,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/ let mut input_array = original_array.clone();","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3377,"byte_end":3426,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/ ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3427,"byte_end":3431,"line_start":49,"line_end":49,"column_start":1,"column_end":5}},{"value":"/ // Treat our 6-element array as a 2D 3x2 array, and transpose it to a 2x3 array","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3432,"byte_end":3515,"line_start":50,"line_end":50,"column_start":1,"column_end":84}},{"value":"/ // transpose_inplace requires max(width, height) scratch space, which is in this case 3","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3516,"byte_end":3607,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ let mut scratch = vec![0; 3];","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3608,"byte_end":3641,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ transpose::transpose_inplace(&mut input_array, &mut scratch, 3, 2);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3642,"byte_end":3713,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3714,"byte_end":3717,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // The rows have become the columns, and the columns have become the rows","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3718,"byte_end":3795,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ let expected_array =  vec![ 1, 4,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3796,"byte_end":3833,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/\t\t\t\t\t\t\t\t2, 5,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3834,"byte_end":3850,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/\t\t\t\t\t\t\t\t3, 6];","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3851,"byte_end":3868,"line_start":58,"line_end":58,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(input_array, expected_array);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3869,"byte_end":3913,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3914,"byte_end":3917,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // If we transpose it again, we should get our original data back.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3918,"byte_end":3988,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ transpose::transpose_inplace(&mut input_array, &mut scratch, 2, 3);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":3989,"byte_end":4060,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(original_array, input_array);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":4061,"byte_end":4105,"line_start":63,"line_end":63,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":4106,"byte_end":4113,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":4114,"byte_end":4117,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":4118,"byte_end":4130,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":4131,"byte_end":4135,"line_start":67,"line_end":67,"column_start":1,"column_end":5}},{"value":"/ Panics if `input.len() != input_width * input_height` or if `output.len() != input_width * input_height`","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/in_place.rs","byte_start":4136,"byte_end":4244,"line_start":68,"line_end":68,"column_start":1,"column_end":109}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16999,"byte_end":17008,"line_start":230,"line_end":230,"column_start":8,"column_end":17},"name":"transpose","qualname":"::out_of_place::transpose","value":"pub fn transpose<T: Copy>(&[T], &mut [T], usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Transpose the input array into the output array. ","sig":null,"attributes":[{"value":"/ Transpose the input array into the output array. ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":15820,"byte_end":15873,"line_start":201,"line_end":201,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":15874,"byte_end":15877,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Given an input array of size input_width * input_height, representing flattened 2D data stored in row-major order,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":15878,"byte_end":15996,"line_start":203,"line_end":203,"column_start":1,"column_end":119}},{"value":"/ transpose the rows and columns of that input array into the output array","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":15997,"byte_end":16073,"line_start":204,"line_end":204,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16074,"byte_end":16081,"line_start":205,"line_end":205,"column_start":1,"column_end":8}},{"value":"/ // row-major order: the rows of our 2D array are contiguous,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16082,"byte_end":16146,"line_start":206,"line_end":206,"column_start":1,"column_end":65}},{"value":"/ // and the columns are strided","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16147,"byte_end":16181,"line_start":207,"line_end":207,"column_start":1,"column_end":35}},{"value":"/ let input_array = vec![ 1, 2, 3,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16182,"byte_end":16218,"line_start":208,"line_end":208,"column_start":1,"column_end":37}},{"value":"/ \t\t\t\t\t\t4, 5, 6];","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16219,"byte_end":16238,"line_start":209,"line_end":209,"column_start":1,"column_end":20}},{"value":"/ ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16239,"byte_end":16243,"line_start":210,"line_end":210,"column_start":1,"column_end":5}},{"value":"/ // Treat our 6-element array as a 2D 3x2 array, and transpose it to a 2x3 array","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16244,"byte_end":16327,"line_start":211,"line_end":211,"column_start":1,"column_end":84}},{"value":"/ let mut output_array = vec![0; 6];","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16328,"byte_end":16366,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/ transpose::transpose(&input_array, &mut output_array, 3, 2);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16367,"byte_end":16431,"line_start":213,"line_end":213,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16432,"byte_end":16435,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ // The rows have become the columns, and the columns have become the rows","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16436,"byte_end":16513,"line_start":215,"line_end":215,"column_start":1,"column_end":78}},{"value":"/ let expected_array =  vec![ 1, 4,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16514,"byte_end":16551,"line_start":216,"line_end":216,"column_start":1,"column_end":38}},{"value":"/\t\t\t\t\t\t\t\t2, 5,","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16552,"byte_end":16568,"line_start":217,"line_end":217,"column_start":1,"column_end":17}},{"value":"/\t\t\t\t\t\t\t\t3, 6];","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16569,"byte_end":16586,"line_start":218,"line_end":218,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(output_array, expected_array);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16587,"byte_end":16632,"line_start":219,"line_end":219,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16633,"byte_end":16636,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ // If we transpose it again, we should get our original data back.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16637,"byte_end":16707,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/ let mut final_array = vec![0; 6];","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16708,"byte_end":16745,"line_start":222,"line_end":222,"column_start":1,"column_end":38}},{"value":"/ transpose::transpose(&output_array, &mut final_array, 2, 3);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16746,"byte_end":16810,"line_start":223,"line_end":223,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(final_array, input_array);","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16811,"byte_end":16852,"line_start":224,"line_end":224,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16853,"byte_end":16860,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16861,"byte_end":16864,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16865,"byte_end":16877,"line_start":227,"line_end":227,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16878,"byte_end":16882,"line_start":228,"line_end":228,"column_start":1,"column_end":5}},{"value":"/ Panics if `input.len() != input_width * input_height` or if `output.len() != input_width * input_height`","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/transpose-0.2.1/src/out_of_place.rs","byte_start":16883,"byte_end":16991,"line_start":229,"line_end":229,"column_start":1,"column_end":109}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}