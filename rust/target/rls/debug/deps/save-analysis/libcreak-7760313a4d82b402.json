{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0","program":"/Users/spluta1/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","creak","--edition=2018","/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"claxon\"","--cfg","feature=\"flac\"","--cfg","feature=\"hound\"","--cfg","feature=\"wav\"","-C","metadata=7760313a4d82b402","-C","extra-filename=-7760313a4d82b402","--out-dir","/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps","-L","dependency=/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps","--extern","claxon=/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps/libclaxon-f844124bb3b32af9.rmeta","--extern","hound=/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps/libhound-ba210d4fb7413cc0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/spluta1/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/spluta1/Documents/rust/time_stretch/target/rls/debug/deps/libcreak-7760313a4d82b402.rmeta"},"prelude":{"crate_id":{"name":"creak","disambiguator":[1922228290341859200,17653145720112499407]},"crate_root":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src","external_crates":[{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11266178634318078844,10430434914575217037]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2427264904945132901,10184032034968735412]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9774951351864599068,14817832832842499961]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10809433593918525561,458952361993985826]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15028772050842969220,14160812736163645060]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6995225455969351707,4449664983666090491]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8140348155906305511,16205222570971502248]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[233178625001733801,10631967199943834554]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1525994598401419908,3288373240607898362]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[6171023582747105604,8380219937402072808]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16379221974889702373,16836676840445794723]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[17037182358159064978,13693302728723089691]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/wav.rs","num":16,"id":{"name":"hound","disambiguator":[75880834621653394,6961256600638962916]}},{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/flac.rs","num":17,"id":{"name":"claxon","disambiguator":[3244189873314171893,2768216719175186729]}}],"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":0,"byte_end":557,"line_start":1,"line_end":18,"column_start":1,"column_end":20}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":555,"byte_end":556,"line_start":18,"line_end":18,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"Endian, AudioFormat, DecoderError, RawSampleFormat, AudioInfo, Sample, RawAudioSpec","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":0,"byte_end":557,"line_start":1,"line_end":18,"column_start":1,"column_end":20},"name":"","qualname":"::","value":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":224}],"decl_id":null,"docs":" # Creak","sig":null,"attributes":[{"value":"/ # Creak","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Creak is a simple library for decoding popular audio formats into raw `f32` samples.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":16,"byte_end":104,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":105,"byte_end":108,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":109,"byte_end":121,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":122,"byte_end":126,"line_start":6,"line_end":6,"column_start":1,"column_end":5}},{"value":"/ The `Decoder` struct handles opening, parsing, and decoding audio files. Use `Decoder::open()` to open a file.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":127,"byte_end":241,"line_start":7,"line_end":7,"column_start":1,"column_end":115}},{"value":"/ When you want to read samples, call `Decoder.into_samples()` to get an iterator over the samples.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":242,"byte_end":343,"line_start":8,"line_end":8,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":344,"byte_end":347,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The audio file is closed when the `Decoder` or `SampleIterator` is dropped.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":348,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ ","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":428,"byte_end":432,"line_start":11,"line_end":11,"column_start":1,"column_end":5}},{"value":"/ Currently supported formats are WAV, Ogg Vorbis, MP3, and FLAC.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":433,"byte_end":500,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"allow(dead_code)","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/lib.rs","byte_start":502,"byte_end":522,"line_start":14,"line_end":14,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":179},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":896,"byte_end":902,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Sample","qualname":"::decoder::Sample","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" The type of decoded audio samples.\n","sig":null,"attributes":[{"value":"/ The type of decoded audio samples.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":848,"byte_end":886,"line_start":13,"line_end":13,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1035,"byte_end":1042,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":181}],"decl_id":null,"docs":" An audio decoder.","sig":null,"attributes":[{"value":"/ An audio decoder.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":911,"byte_end":932,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":933,"byte_end":936,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Use `Decoder::open` or `Decoder::open_raw` to open an audio file and read samples.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":937,"byte_end":1023,"line_start":18,"line_end":18,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":273},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1177,"byte_end":1189,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"RawAudioSpec","qualname":"::decoder::RawAudioSpec","value":"RawAudioSpec { sample_rate, channels, sample_format, endianness, start_offset, max_frames }","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"decl_id":null,"docs":" Specification decsribing how to decode some raw audio samples.\n","sig":null,"attributes":[{"value":"/ Specification decsribing how to decode some raw audio samples.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1075,"byte_end":1141,"line_start":23,"line_end":23,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":274},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1238,"byte_end":1249,"line_start":27,"line_end":27,"column_start":9,"column_end":20},"name":"sample_rate","qualname":"::decoder::RawAudioSpec::sample_rate","value":"u32","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" The sample rate of the audio.\n","sig":null,"attributes":[{"value":"/ The sample rate of the audio.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1196,"byte_end":1229,"line_start":26,"line_end":26,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":275},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1310,"byte_end":1318,"line_start":29,"line_end":29,"column_start":9,"column_end":17},"name":"channels","qualname":"::decoder::RawAudioSpec::channels","value":"usize","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" The numbers of channels in the audio.\n","sig":null,"attributes":[{"value":"/ The numbers of channels in the audio.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1260,"byte_end":1301,"line_start":28,"line_end":28,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":276},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1374,"byte_end":1387,"line_start":31,"line_end":31,"column_start":9,"column_end":22},"name":"sample_format","qualname":"::decoder::RawAudioSpec::sample_format","value":"decoder::RawSampleFormat","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" The format of the sample data.\n","sig":null,"attributes":[{"value":"/ The format of the sample data.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1331,"byte_end":1365,"line_start":30,"line_end":30,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":277},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1453,"byte_end":1463,"line_start":33,"line_end":33,"column_start":9,"column_end":19},"name":"endianness","qualname":"::decoder::RawAudioSpec::endianness","value":"decoder::Endian","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" The endianness of the samples.\n","sig":null,"attributes":[{"value":"/ The endianness of the samples.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1410,"byte_end":1444,"line_start":32,"line_end":32,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":278},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1540,"byte_end":1552,"line_start":35,"line_end":35,"column_start":9,"column_end":21},"name":"start_offset","qualname":"::decoder::RawAudioSpec::start_offset","value":"usize","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" The byte offset at which to start reading samples.\n","sig":null,"attributes":[{"value":"/ The byte offset at which to start reading samples.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1477,"byte_end":1531,"line_start":34,"line_end":34,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":279},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1615,"byte_end":1625,"line_start":37,"line_end":37,"column_start":9,"column_end":19},"name":"max_frames","qualname":"::decoder::RawAudioSpec::max_frames","value":"std::option::Option<usize>","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" The maximum number of frames to read.\n","sig":null,"attributes":[{"value":"/ The maximum number of frames to read.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1565,"byte_end":1606,"line_start":36,"line_end":36,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":285},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1744,"byte_end":1747,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"Big","qualname":"::decoder::Endian::Big","value":"Endian::Big","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Big Endian.\n","sig":null,"attributes":[{"value":"/ Big Endian.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1724,"byte_end":1739,"line_start":43,"line_end":43,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":287},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1776,"byte_end":1782,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Little","qualname":"::decoder::Endian::Little","value":"Endian::Little","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Little Endian.\n","sig":null,"attributes":[{"value":"/ Little Endian.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1753,"byte_end":1771,"line_start":45,"line_end":45,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":284},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1711,"byte_end":1717,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"name":"Endian","qualname":"::decoder::Endian","value":"pub enum Endian { Big, Little, }","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":287}],"decl_id":null,"docs":" Represents endianness.\n","sig":null,"attributes":[{"value":"/ Represents endianness.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1645,"byte_end":1671,"line_start":40,"line_end":40,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":295},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1962,"byte_end":1969,"line_start":53,"line_end":53,"column_start":5,"column_end":12},"name":"Float32","qualname":"::decoder::RawSampleFormat::Float32","value":"RawSampleFormat::Float32","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" 32-bit IEEE floating-point sample format.\n","sig":null,"attributes":[{"value":"/ 32-bit IEEE floating-point sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1912,"byte_end":1957,"line_start":52,"line_end":52,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2025,"byte_end":2032,"line_start":55,"line_end":55,"column_start":5,"column_end":12},"name":"Float64","qualname":"::decoder::RawSampleFormat::Float64","value":"RawSampleFormat::Float64","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" 64-bit IEEE floating-point sample format.\n","sig":null,"attributes":[{"value":"/ 64-bit IEEE floating-point sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1975,"byte_end":2020,"line_start":54,"line_end":54,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":299},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2085,"byte_end":2094,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"name":"Unsigned8","qualname":"::decoder::RawSampleFormat::Unsigned8","value":"RawSampleFormat::Unsigned8","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Unsignbed 8-bit integer sample format.\n","sig":null,"attributes":[{"value":"/ Unsignbed 8-bit integer sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2038,"byte_end":2080,"line_start":56,"line_end":56,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":301},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2144,"byte_end":2151,"line_start":59,"line_end":59,"column_start":5,"column_end":12},"name":"Signed8","qualname":"::decoder::RawSampleFormat::Signed8","value":"RawSampleFormat::Signed8","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Signed 8-bit integer sample format.\n","sig":null,"attributes":[{"value":"/ Signed 8-bit integer sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2100,"byte_end":2139,"line_start":58,"line_end":58,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":303},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2204,"byte_end":2214,"line_start":61,"line_end":61,"column_start":5,"column_end":15},"name":"Unsigned16","qualname":"::decoder::RawSampleFormat::Unsigned16","value":"RawSampleFormat::Unsigned16","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Unsigned 16-bit integer sample format.\n","sig":null,"attributes":[{"value":"/ Unsigned 16-bit integer sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2157,"byte_end":2199,"line_start":60,"line_end":60,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":305},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2265,"byte_end":2273,"line_start":63,"line_end":63,"column_start":5,"column_end":13},"name":"Signed16","qualname":"::decoder::RawSampleFormat::Signed16","value":"RawSampleFormat::Signed16","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Signed 16-bit integer sample format.\n","sig":null,"attributes":[{"value":"/ Signed 16-bit integer sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2220,"byte_end":2260,"line_start":62,"line_end":62,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":307},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2326,"byte_end":2336,"line_start":65,"line_end":65,"column_start":5,"column_end":15},"name":"Unsigned24","qualname":"::decoder::RawSampleFormat::Unsigned24","value":"RawSampleFormat::Unsigned24","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Unsigned 24-bit integer sample format.\n","sig":null,"attributes":[{"value":"/ Unsigned 24-bit integer sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2279,"byte_end":2321,"line_start":64,"line_end":64,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":309},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2387,"byte_end":2395,"line_start":67,"line_end":67,"column_start":5,"column_end":13},"name":"Signed24","qualname":"::decoder::RawSampleFormat::Signed24","value":"RawSampleFormat::Signed24","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Signed 24-bit integer sample format.\n","sig":null,"attributes":[{"value":"/ Signed 24-bit integer sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2342,"byte_end":2382,"line_start":66,"line_end":66,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":311},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2448,"byte_end":2458,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"Unsigned32","qualname":"::decoder::RawSampleFormat::Unsigned32","value":"RawSampleFormat::Unsigned32","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Unsigned 32-bit integer sample format.\n","sig":null,"attributes":[{"value":"/ Unsigned 32-bit integer sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2401,"byte_end":2443,"line_start":68,"line_end":68,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":313},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2509,"byte_end":2517,"line_start":71,"line_end":71,"column_start":5,"column_end":13},"name":"Signed32","qualname":"::decoder::RawSampleFormat::Signed32","value":"RawSampleFormat::Signed32","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Signed 32-bit integer sample format.\n","sig":null,"attributes":[{"value":"/ Signed 32-bit integer sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2464,"byte_end":2504,"line_start":70,"line_end":70,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":315},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2570,"byte_end":2580,"line_start":73,"line_end":73,"column_start":5,"column_end":15},"name":"Unsigned64","qualname":"::decoder::RawSampleFormat::Unsigned64","value":"RawSampleFormat::Unsigned64","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Unsigned 64-bit integer sample format.\n","sig":null,"attributes":[{"value":"/ Unsigned 64-bit integer sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2523,"byte_end":2565,"line_start":72,"line_end":72,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":317},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2631,"byte_end":2639,"line_start":75,"line_end":75,"column_start":5,"column_end":13},"name":"Signed64","qualname":"::decoder::RawSampleFormat::Signed64","value":"RawSampleFormat::Signed64","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" signed 64-bit integer sample format.\n","sig":null,"attributes":[{"value":"/ signed 64-bit integer sample format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2586,"byte_end":2626,"line_start":74,"line_end":74,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":294},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1890,"byte_end":1905,"line_start":51,"line_end":51,"column_start":10,"column_end":25},"name":"RawSampleFormat","qualname":"::decoder::RawSampleFormat","value":"pub enum RawSampleFormat {\n    Float32,\n    Float64,\n    Unsigned8,\n    Signed8,\n    Unsigned16,\n    Signed16,\n    Unsigned24,\n    Signed24,\n    Unsigned32,\n    Signed32,\n    Unsigned64,\n    Signed64,\n}","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317}],"decl_id":null,"docs":" Represents supported sample formats for raw audio decoding.\n","sig":null,"attributes":[{"value":"/ Represents supported sample formats for raw audio decoding.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":1787,"byte_end":1850,"line_start":49,"line_end":49,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":324},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2722,"byte_end":2731,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"AudioInfo","qualname":"::decoder::AudioInfo","value":"AudioInfo {  }","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"decl_id":null,"docs":" Information about an opened audio file.\n","sig":null,"attributes":[{"value":"/ Information about an opened audio file.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2643,"byte_end":2686,"line_start":78,"line_end":78,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2890,"byte_end":2901,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"sample_rate","qualname":"<AudioInfo>::sample_rate","value":"pub fn sample_rate(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets the sample rate of the audio.\n","sig":null,"attributes":[{"value":"/ Gets the sample rate of the audio.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2826,"byte_end":2864,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2869,"byte_end":2878,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3025,"byte_end":3033,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"channels","qualname":"<AudioInfo>::channels","value":"pub fn channels(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of channels in the audio.\n","sig":null,"attributes":[{"value":"/ Gets the number of channels in the audio.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2954,"byte_end":2999,"line_start":93,"line_end":93,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3004,"byte_end":3013,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3154,"byte_end":3160,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"format","qualname":"<AudioInfo>::format","value":"pub fn format(&Self) -> AudioFormat","parent":null,"children":[],"decl_id":null,"docs":" Gets the original format of the audio.\n","sig":null,"attributes":[{"value":"/ Gets the original format of the audio.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3085,"byte_end":3127,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3132,"byte_end":3141,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":333},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3336,"byte_end":3339,"line_start":110,"line_end":110,"column_start":5,"column_end":8},"name":"Wav","qualname":"::decoder::AudioFormat::Wav","value":"AudioFormat::Wav","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" WAV format.\n","sig":null,"attributes":[{"value":"/ WAV format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3316,"byte_end":3331,"line_start":109,"line_end":109,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":335},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3372,"byte_end":3378,"line_start":112,"line_end":112,"column_start":5,"column_end":11},"name":"Vorbis","qualname":"::decoder::AudioFormat::Vorbis","value":"AudioFormat::Vorbis","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Ogg Vorbis format.\n","sig":null,"attributes":[{"value":"/ Ogg Vorbis format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3345,"byte_end":3367,"line_start":111,"line_end":111,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":337},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3413,"byte_end":3416,"line_start":114,"line_end":114,"column_start":5,"column_end":8},"name":"Mp3","qualname":"::decoder::AudioFormat::Mp3","value":"AudioFormat::Mp3","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" MPEG Layer 3 format.\n","sig":null,"attributes":[{"value":"/ MPEG Layer 3 format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3384,"byte_end":3408,"line_start":113,"line_end":113,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3443,"byte_end":3447,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Flac","qualname":"::decoder::AudioFormat::Flac","value":"AudioFormat::Flac","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" FLAC format.\n","sig":null,"attributes":[{"value":"/ FLAC format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3422,"byte_end":3438,"line_start":115,"line_end":115,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":341},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3480,"byte_end":3483,"line_start":118,"line_end":118,"column_start":5,"column_end":8},"name":"Raw","qualname":"::decoder::AudioFormat::Raw","value":"AudioFormat::Raw","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Raw audio samples.\n","sig":null,"attributes":[{"value":"/ Raw audio samples.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3453,"byte_end":3475,"line_start":117,"line_end":117,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":332},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3298,"byte_end":3309,"line_start":108,"line_end":108,"column_start":10,"column_end":21},"name":"AudioFormat","qualname":"::decoder::AudioFormat","value":"pub enum AudioFormat { Wav, Vorbis, Mp3, Flac, Raw, }","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341}],"decl_id":null,"docs":" Indicates the format of an audio stream.\n","sig":null,"attributes":[{"value":"/ Indicates the format of an audio stream.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3214,"byte_end":3258,"line_start":106,"line_end":106,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4252,"byte_end":4256,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"open","qualname":"<Decoder>::open","value":"pub fn open<P: AsRef<Path>>(P) -> Result<Self, DecoderError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open the specified audio file for decoding.","sig":null,"attributes":[{"value":"/ Attempts to open the specified audio file for decoding.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3909,"byte_end":3968,"line_start":134,"line_end":134,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3973,"byte_end":3976,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Creak uses the file's extension to determine what kind of format it is.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3981,"byte_end":4056,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ The currently recognized extensions are:","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4061,"byte_end":4105,"line_start":137,"line_end":137,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4110,"byte_end":4113,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ * **.wav** - WAV.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4118,"byte_end":4139,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/ * **.ogg** - Ogg Vorbis.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4144,"byte_end":4172,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"/ * **.mp3** - MP3.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4177,"byte_end":4198,"line_start":141,"line_end":141,"column_start":5,"column_end":26}},{"value":"/ * **.flac** - FLAC.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4203,"byte_end":4226,"line_start":142,"line_end":142,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4231,"byte_end":4240,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4609,"byte_end":4617,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"open_raw","qualname":"<Decoder>::open_raw","value":"pub fn open_raw<P: AsRef<Path>>(P, RawAudioSpec) -> Result<Self, DecoderError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open the specified audio file for raw sample decoding.","sig":null,"attributes":[{"value":"/ Attempts to open the specified audio file for raw sample decoding.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4402,"byte_end":4472,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4477,"byte_end":4480,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The format of the source samples is determined from the `RawAudioSpec` passed to the function.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4485,"byte_end":4583,"line_start":152,"line_end":152,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4588,"byte_end":4597,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":5003,"byte_end":5007,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"info","qualname":"<Decoder>::info","value":"pub fn info(&Self) -> AudioInfo","parent":null,"children":[],"decl_id":null,"docs":" Gets information about the audio, such as channel count and sample rate.\n","sig":null,"attributes":[{"value":"/ Gets information about the audio, such as channel count and sample rate.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4901,"byte_end":4977,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4982,"byte_end":4991,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":5197,"byte_end":5209,"line_start":172,"line_end":172,"column_start":12,"column_end":24},"name":"into_samples","qualname":"<Decoder>::into_samples","value":"pub fn into_samples(Self) -> Result<SampleIterator, DecoderError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Decoder` and returns an iterator over the samples.\n Channels are interleaved.\n","sig":null,"attributes":[{"value":"/ Consumes the `Decoder` and returns an iterator over the samples.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":5069,"byte_end":5137,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ Channels are interleaved.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":5142,"byte_end":5171,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":5176,"byte_end":5185,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":196},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":5381,"byte_end":5395,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"SampleIterator","qualname":"::decoder::SampleIterator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterates over decoded audio samples. Channels are interleaved.\n","sig":null,"attributes":[{"value":"/ Iterates over decoded audio samples. Channels are interleaved.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":5303,"byte_end":5369,"line_start":177,"line_end":177,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":349},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8625,"byte_end":8632,"line_start":265,"line_end":265,"column_start":5,"column_end":12},"name":"IOError","qualname":"::decoder::DecoderError::IOError","value":"DecoderError::IOError(io::Error)","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8606,"byte_end":8620,"line_start":264,"line_end":264,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":352},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8693,"byte_end":8704,"line_start":267,"line_end":267,"column_start":5,"column_end":16},"name":"FormatError","qualname":"::decoder::DecoderError::FormatError","value":"DecoderError::FormatError(String)","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Error specific to the audio format.\n","sig":null,"attributes":[{"value":"/ Error specific to the audio format.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8649,"byte_end":8688,"line_start":266,"line_end":266,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":355},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8771,"byte_end":8782,"line_start":269,"line_end":269,"column_start":5,"column_end":16},"name":"NoExtension","qualname":"::decoder::DecoderError::NoExtension","value":"DecoderError::NoExtension","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" No extension was provided on the input file.\n","sig":null,"attributes":[{"value":"/ No extension was provided on the input file.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8718,"byte_end":8766,"line_start":268,"line_end":268,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":357},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8859,"byte_end":8879,"line_start":271,"line_end":271,"column_start":5,"column_end":25},"name":"UnsupportedExtension","qualname":"::decoder::DecoderError::UnsupportedExtension","value":"DecoderError::UnsupportedExtension(String)","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" The extension on the input file is not supported for decoding.\n","sig":null,"attributes":[{"value":"/ The extension on the input file is not supported for decoding.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8788,"byte_end":8854,"line_start":270,"line_end":270,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":360},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8980,"byte_end":8994,"line_start":273,"line_end":273,"column_start":5,"column_end":19},"name":"IncompleteData","qualname":"::decoder::DecoderError::IncompleteData","value":"DecoderError::IncompleteData","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" The decoder could not read a complete frame or sample, possibly due to an EOF.\n","sig":null,"attributes":[{"value":"/ The decoder could not read a complete frame or sample, possibly due to an EOF.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8893,"byte_end":8975,"line_start":272,"line_end":272,"column_start":5,"column_end":87}}]},{"kind":"StructVariant","id":{"krate":0,"index":362},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":9080,"byte_end":9097,"line_start":275,"line_end":275,"column_start":5,"column_end":22},"name":"DisabledExtension","qualname":"::decoder::DecoderError::DisabledExtension","value":"DecoderError::DisabledExtension { extension, feature }","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" The extension on the input file requires a feature that is not enabled.\n","sig":null,"attributes":[{"value":"/ The extension on the input file requires a feature that is not enabled.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":9000,"byte_end":9075,"line_start":274,"line_end":274,"column_start":5,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":348},"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8587,"byte_end":8599,"line_start":263,"line_end":263,"column_start":10,"column_end":22},"name":"DecoderError","qualname":"::decoder::DecoderError","value":"pub enum DecoderError {\n    IOError(io::Error),\n    FormatError(String),\n    NoExtension,\n    UnsupportedExtension(String),\n    IncompleteData,\n    DisabledExtension {\n        extension: &'static str,\n        feature: &'static str,\n    },\n}","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":362}],"decl_id":null,"docs":" An error encountered while decoding an audio file.\n","sig":null,"attributes":[{"value":"/ An error encountered while decoding an audio file.","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":8506,"byte_end":8560,"line_start":261,"line_end":261,"column_start":1,"column_end":55}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/raw.rs","byte_start":10636,"byte_end":10646,"line_start":12,"line_end":12,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/raw.rs","byte_start":11210,"byte_end":11220,"line_start":33,"line_end":33,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/raw.rs","byte_start":17993,"byte_end":18010,"line_start":168,"line_end":168,"column_start":97,"column_end":114},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/wav.rs","byte_start":18701,"byte_end":18711,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/flac.rs","byte_start":22395,"byte_end":22406,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/flac.rs","byte_start":22802,"byte_end":22813,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/flac.rs","byte_start":23418,"byte_end":23436,"line_start":50,"line_end":50,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/flac.rs","byte_start":23852,"byte_end":23870,"line_start":64,"line_end":64,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2810,"byte_end":2819,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3505,"byte_end":3516,"line_start":121,"line_end":121,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3895,"byte_end":3902,"line_start":133,"line_end":133,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4887,"byte_end":4894,"line_start":162,"line_end":162,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":5472,"byte_end":5486,"line_start":180,"line_end":180,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":5981,"byte_end":5994,"line_start":201,"line_end":201,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":9189,"byte_end":9201,"line_start":281,"line_end":281,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":9373,"byte_end":9385,"line_start":291,"line_end":291,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/raw.rs","byte_start":10636,"byte_end":10646,"line_start":12,"line_end":12,"column_start":22,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/raw.rs","byte_start":11210,"byte_end":11220,"line_start":33,"line_end":33,"column_start":22,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/raw.rs","byte_start":17993,"byte_end":18010,"line_start":168,"line_end":168,"column_start":97,"column_end":114},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":71},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/wav.rs","byte_start":18701,"byte_end":18711,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/flac.rs","byte_start":22395,"byte_end":22406,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/flac.rs","byte_start":22802,"byte_end":22813,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/flac.rs","byte_start":23418,"byte_end":23436,"line_start":50,"line_end":50,"column_start":24,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder/flac.rs","byte_start":23852,"byte_end":23870,"line_start":64,"line_end":64,"column_start":28,"column_end":46},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":163},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":2810,"byte_end":2819,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3505,"byte_end":3516,"line_start":121,"line_end":121,"column_start":18,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":332},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":3895,"byte_end":3902,"line_start":133,"line_end":133,"column_start":6,"column_end":13},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":4887,"byte_end":4894,"line_start":162,"line_end":162,"column_start":6,"column_end":13},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":5472,"byte_end":5486,"line_start":180,"line_end":180,"column_start":19,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":196},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":5981,"byte_end":5994,"line_start":201,"line_end":201,"column_start":6,"column_end":19},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":9189,"byte_end":9201,"line_start":281,"line_end":281,"column_start":16,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/spluta1/.cargo/registry/src/github.com-1ecc6299db9ec823/creak-0.3.0/src/decoder.rs","byte_start":9373,"byte_end":9385,"line_start":291,"line_end":291,"column_start":18,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":8708}}]}